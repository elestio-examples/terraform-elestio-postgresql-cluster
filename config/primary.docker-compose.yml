version: '3'
services:
  postgres:
    user: 1001:1001
    image: elestio/postgres:${SOFTWARE_VERSION_TAG}
    shm_size: 1g
    restart: always
    command: |
      postgres
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
      -c cluster_name="${CLUSTER_NAME}"
      -c synchronous_standby_names="${SYNCHRONOUS_STANDBY_NAMES}"
      -c synchronous_commit="${SYNCHRONOUS_COMMIT}"
    # -c ssl=on
    # -c ssl_cert_file=/var/lib/postgresql/data/server.crt
    # -c ssl_key_file=/var/lib/postgresql/data/server.key
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${SOFTWARE_PASSWORD}
      PGDATA: /var/lib/postgresql/data
      TS_TUNE_MAX_CONNS: 100
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: '--auth-host=scram-sha-256'
    volumes:
      - ./data:/var/lib/postgresql/data
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
    ports:
      - '5432:5432'

  pgadmin:
    image: elestio/pgadmin:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${ADMIN_PASSWORD}
      PGADMIN_LISTEN_PORT: 8080
    ports:
      - '172.17.0.1:8080:8080'
    volumes:
      - ./servers.json:/pgadmin4/servers.json
      - ./pgadmin:/var/lib/pgadmin
